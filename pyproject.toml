[tool.poetry]
name = "quart-mongo"
version = "0.1.0"
description = "Quart-Mongo bridges Quart, Motor, and Odmantic to create a powerful MongoDB extension for your Quart app."
authors = ["Chris Rood <quart.addons@gmail.com>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = "MIT"
readme = "README.md"
packages = [{include = "quart_mongo"}]
repository = "https://github.com/Quart-Addons/quart-mongo"

[tool.black]
line-length = 100
target-version = ["py37"]

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "quart_schema, tests"
line_length = 100
multi_line_output = 3
no_lines_before = "LOCALFOLDER"
order_by_type = false
reverse_relative = true

[tool.mypy]
allow_redefinition = true
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
implicit_reexport = true
no_implicit_optional = true
plugins = "pydantic.mypy"
show_error_codes = true
strict = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry.dependencies]
python = "^3.10"
quart = "^0.18.3"
odmantic = "^0.9.2"
motor = "^3.1.1"
pymongo = "^4.3.3"
pydantic = "^1.10.7"
pydata_sphinx_theme = { version = "*", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pytest-asyncio = "^0.21.0"
quart-schema = "^0.16.0"
tox = "*"
sphinx = "^7.0.1"

[tool.poetry.extras]
docs = ["pydata_sphinx_theme"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
